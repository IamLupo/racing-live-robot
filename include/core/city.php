<?phpclass City{	var $investment = array();		function __construct()	{		$this->investment = $this->Default_Investments();	}		function Default_Investments()	{		return array(	array(	1,	"Parking Space",				50,		0,	0	),						array(	2,	"Used Car Lot",					100,	0,	0	),						array(	3,	"Convenience Store",			200,	0,	0	),						array(	4,	"Condo",						400,	0,	0	),						array(	5,	"Car Wash Service",				1000,	0,	0	),						array(	6,	"Parking Garage",				1500,	0,	0	),						array(	7,	"Downtown Loft",				2700,	0,	0	),						array(	8,	"Chop Shop",					4800,	0,	0	),						array(	9,	"Automotive Electronics Store",	7500,	0,	0	),						array(	10,	"Beach House",					11500,	0,	0	),						array(	11,	"Import Car Dealership",		28000,	0,	0	),						array(	12,	"Discount Brand Gas Station",		0,	0,	0	),						array(	13,	"Premium Brand Gas Station",		0,	0,	0	),						array(	14,	"Fuel Storage Silos",				0,	0,	0	),						array(	15,	"Custom Mod Shop",				32000,	0,	0	),						array(	16,	"Luxury Car Showroom",			34000,	0,	0	)	);	}	function GetArrayID( $v_investment_id )	{		$counter = count($this->investment);		$v_investment_id = intval($v_investment_id);				for($i = 0; $i < $counter; $i++)			if($this->investment[$i][0] == $v_investment_id)				return $i;		return -1;	}		function ScanInvestments( $v_html )	{		$html = str_get_html($v_html);						if(!$this->ScanInvestmentsInProfile($html))			if(!$this->ScanInvestmentsInShop($html))				return false;				return true;	}			function ScanInvestmentsInProfile( $v_html )	{		$return = false;				foreach($v_html->find("div[style]") as $element)		{			if($element->getAttribute("style") == "clear:both;")			{				$element2 = $element->find("div.sectionHeader", 0);				if($element2->plaintext == "Real Estate")				{								foreach($element->find("div[style]") as $element3)					{						$image = $element3->find("div", 0)->find("img", 0)->getAttribute("src");												//GetIDinImage						preg_match("/.*?[0-9].*?([0-9]+).*/", $image, $match);						$array_id = $this->GetArrayID($match[1]);												//GetOwnedShops						$this->investment[$array_id][3] = intval(str_replace("x", "", $element3->plaintext));													$return = true;					}				}			}		}				return $return;	}			function ScanInvestmentsInShop( $v_html )	{		$return = false;		foreach($v_html->find("table.reTable") as $element)		{			//GetIDinImage			$image = $element->find("img", 0)->getAttribute("src");			preg_match("/.*?[0-9].*?([0-9]+).*/", $image, $match);			$array_id = $this->GetArrayID($match[1]);						//GetOwnedShops			preg_match("/Owned:.*?([0-9]+).*/", $element->outertext, $match);			$this->investment[$array_id][3] = intval($match[1]);						//GetCostShop			$cost = $element->find("td.reBuyAction", 0)->find("span", 0);			$this->investment[$array_id][4] = MoneyStrToInt($cost->plaintext);						$return = true;		}				return $return;	}		function CalcCheapestInvestment()	{		$counter = count($this->investment);		$cheapest_id = -1;		$cheapest_cost = 0;				for($i = 0; $i < $counter; $i++)		{			if(	$this->investment[$i][4] != 0 &&				$this->investment[$i][2] != 0)			{				$temp_cost = $this->investment[$i][4] / $this->investment[$i][2];								if(	$cheapest_cost == 0 && $temp_cost != 0 ||					$cheapest_cost > $temp_cost)				{					$cheapest_id = $this->investment[$i][0];					$cheapest_cost = $temp_cost;				}			}		}				return $cheapest_id;	}}?>